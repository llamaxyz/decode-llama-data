export const llamaCoreAbi = [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  { inputs: [], name: 'BootstrapStrategyNotAuthorized', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'CannotCastWithZeroQuantity',
    type: 'error',
  },
  { inputs: [], name: 'CannotDisapproveAfterMinExecutionTime', type: 'error' },
  { inputs: [], name: 'CannotSetExecutorAsTarget', type: 'error' },
  { inputs: [], name: 'DuplicateCast', type: 'error' },
  { inputs: [{ internalType: 'bytes', name: 'reason', type: 'bytes' }], name: 'FailedActionExecution', type: 'error' },
  { inputs: [], name: 'IncorrectMsgValue', type: 'error' },
  { inputs: [], name: 'InfoHashMismatch', type: 'error' },
  {
    inputs: [{ internalType: 'enum ActionState', name: 'current', type: 'uint8' }],
    name: 'InvalidActionState',
    type: 'error',
  },
  { inputs: [], name: 'InvalidPolicyholder', type: 'error' },
  { inputs: [], name: 'InvalidSignature', type: 'error' },
  { inputs: [], name: 'MinExecutionTimeCannotBeInThePast', type: 'error' },
  { inputs: [], name: 'MinExecutionTimeNotReached', type: 'error' },
  { inputs: [], name: 'NonExistentStrategy', type: 'error' },
  { inputs: [], name: 'OnlyLlama', type: 'error' },
  { inputs: [], name: 'PolicyholderDoesNotHavePermission', type: 'error' },
  { inputs: [], name: 'RestrictedAddress', type: 'error' },
  { inputs: [], name: 'UnauthorizedAccountLogic', type: 'error' },
  { inputs: [], name: 'UnauthorizedStrategy', type: 'error' },
  { inputs: [], name: 'UnauthorizedStrategyLogic', type: 'error' },
  { inputs: [{ internalType: 'uint256', name: 'n', type: 'uint256' }], name: 'UnsafeCast', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'contract ILlamaAccount', name: 'account', type: 'address' },
      { indexed: true, internalType: 'contract ILlamaAccount', name: 'accountLogic', type: 'address' },
      { indexed: false, internalType: 'bytes', name: 'initializationData', type: 'bytes' },
    ],
    name: 'AccountCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'contract ILlamaAccount', name: 'accountLogic', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'AccountLogicAuthorizationSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'caller', type: 'address' },
    ],
    name: 'ActionCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'creator', type: 'address' },
      { indexed: false, internalType: 'uint8', name: 'role', type: 'uint8' },
      { indexed: true, internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { indexed: true, internalType: 'address', name: 'target', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },
      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' },
      { indexed: false, internalType: 'string', name: 'description', type: 'string' },
    ],
    name: 'ActionCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'caller', type: 'address' },
      { indexed: true, internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { indexed: true, internalType: 'address', name: 'creator', type: 'address' },
      { indexed: false, internalType: 'bytes', name: 'result', type: 'bytes' },
    ],
    name: 'ActionExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'target', type: 'address' },
      { indexed: true, internalType: 'bytes4', name: 'selector', type: 'bytes4' },
      { indexed: false, internalType: 'contract ILlamaActionGuard', name: 'actionGuard', type: 'address' },
    ],
    name: 'ActionGuardSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'caller', type: 'address' },
      { indexed: true, internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { indexed: true, internalType: 'address', name: 'creator', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'minExecutionTime', type: 'uint256' },
    ],
    name: 'ActionQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'policyholder', type: 'address' },
      { indexed: true, internalType: 'uint8', name: 'role', type: 'uint8' },
      { indexed: false, internalType: 'uint256', name: 'quantity', type: 'uint256' },
      { indexed: false, internalType: 'string', name: 'reason', type: 'string' },
    ],
    name: 'ApprovalCast',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'id', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'policyholder', type: 'address' },
      { indexed: true, internalType: 'uint8', name: 'role', type: 'uint8' },
      { indexed: false, internalType: 'uint256', name: 'quantity', type: 'uint256' },
      { indexed: false, internalType: 'string', name: 'reason', type: 'string' },
    ],
    name: 'DisapprovalCast',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'script', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'ScriptAuthorizationSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'StrategyAuthorizationSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { indexed: true, internalType: 'contract ILlamaStrategy', name: 'strategyLogic', type: 'address' },
      { indexed: false, internalType: 'bytes', name: 'initializationData', type: 'bytes' },
    ],
    name: 'StrategyCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'contract ILlamaStrategy', name: 'strategyLogic', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'StrategyLogicAuthorizationSet',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'address', name: 'target', type: 'address' },
      { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
    ],
    name: 'actionGuard',
    outputs: [{ internalType: 'contract ILlamaActionGuard', name: 'guard', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'actionsCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'actionId', type: 'uint256' },
      { internalType: 'address', name: 'policyholder', type: 'address' },
    ],
    name: 'approvals',
    outputs: [{ internalType: 'bool', name: 'hasApproved', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract ILlamaAccount', name: 'accountLogic', type: 'address' }],
    name: 'authorizedAccountLogics',
    outputs: [{ internalType: 'bool', name: 'isAuthorized', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'script', type: 'address' }],
    name: 'authorizedScripts',
    outputs: [{ internalType: 'bool', name: 'isAuthorized', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract ILlamaStrategy', name: 'strategyLogic', type: 'address' }],
    name: 'authorizedStrategyLogics',
    outputs: [{ internalType: 'bool', name: 'isAuthorized', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
    ],
    name: 'cancelAction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
      { internalType: 'uint8', name: 'v', type: 'uint8' },
      { internalType: 'bytes32', name: 'r', type: 'bytes32' },
      { internalType: 'bytes32', name: 's', type: 'bytes32' },
    ],
    name: 'cancelActionBySig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
      { internalType: 'string', name: 'reason', type: 'string' },
    ],
    name: 'castApproval',
    outputs: [{ internalType: 'uint96', name: '', type: 'uint96' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
      { internalType: 'string', name: 'reason', type: 'string' },
      { internalType: 'uint8', name: 'v', type: 'uint8' },
      { internalType: 'bytes32', name: 'r', type: 'bytes32' },
      { internalType: 'bytes32', name: 's', type: 'bytes32' },
    ],
    name: 'castApprovalBySig',
    outputs: [{ internalType: 'uint96', name: '', type: 'uint96' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
      { internalType: 'string', name: 'reason', type: 'string' },
    ],
    name: 'castDisapproval',
    outputs: [{ internalType: 'uint96', name: '', type: 'uint96' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
      { internalType: 'string', name: 'reason', type: 'string' },
      { internalType: 'uint8', name: 'v', type: 'uint8' },
      { internalType: 'bytes32', name: 'r', type: 'bytes32' },
      { internalType: 'bytes32', name: 's', type: 'bytes32' },
    ],
    name: 'castDisapprovalBySig',
    outputs: [{ internalType: 'uint96', name: '', type: 'uint96' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaAccount', name: 'llamaAccountLogic', type: 'address' },
      { internalType: 'bytes[]', name: 'accountConfigs', type: 'bytes[]' },
    ],
    name: 'createAccounts',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { internalType: 'address', name: 'target', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
      { internalType: 'string', name: 'description', type: 'string' },
    ],
    name: 'createAction',
    outputs: [{ internalType: 'uint256', name: 'actionId', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { internalType: 'address', name: 'target', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
      { internalType: 'string', name: 'description', type: 'string' },
      { internalType: 'uint8', name: 'v', type: 'uint8' },
      { internalType: 'bytes32', name: 'r', type: 'bytes32' },
      { internalType: 'bytes32', name: 's', type: 'bytes32' },
    ],
    name: 'createActionBySig',
    outputs: [{ internalType: 'uint256', name: 'actionId', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaStrategy', name: 'llamaStrategyLogic', type: 'address' },
      { internalType: 'bytes[]', name: 'strategyConfigs', type: 'bytes[]' },
    ],
    name: 'createStrategies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'actionId', type: 'uint256' },
      { internalType: 'address', name: 'policyholder', type: 'address' },
    ],
    name: 'disapprovals',
    outputs: [{ internalType: 'bool', name: 'hasDisapproved', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
    ],
    name: 'executeAction',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executor',
    outputs: [{ internalType: 'contract LlamaExecutor', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'actionId', type: 'uint256' }],
    name: 'getAction',
    outputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'infoHash', type: 'bytes32' },
          { internalType: 'bool', name: 'executed', type: 'bool' },
          { internalType: 'bool', name: 'canceled', type: 'bool' },
          { internalType: 'bool', name: 'isScript', type: 'bool' },
          { internalType: 'contract ILlamaActionGuard', name: 'guard', type: 'address' },
          { internalType: 'uint64', name: 'creationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'minExecutionTime', type: 'uint64' },
          { internalType: 'uint96', name: 'totalApprovals', type: 'uint96' },
          { internalType: 'uint96', name: 'totalDisapprovals', type: 'uint96' },
        ],
        internalType: 'struct Action',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
    ],
    name: 'getActionState',
    outputs: [{ internalType: 'enum ActionState', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'selector', type: 'bytes4' }],
    name: 'incrementNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'contract ILlamaStrategy', name: 'strategyLogic', type: 'address' },
          { internalType: 'contract ILlamaAccount', name: 'accountLogic', type: 'address' },
          { internalType: 'bytes[]', name: 'initialStrategies', type: 'bytes[]' },
          { internalType: 'bytes[]', name: 'initialAccounts', type: 'bytes[]' },
          {
            components: [
              { internalType: 'RoleDescription[]', name: 'roleDescriptions', type: 'bytes32[]' },
              {
                components: [
                  { internalType: 'uint8', name: 'role', type: 'uint8' },
                  { internalType: 'address', name: 'policyholder', type: 'address' },
                  { internalType: 'uint96', name: 'quantity', type: 'uint96' },
                  { internalType: 'uint64', name: 'expiration', type: 'uint64' },
                ],
                internalType: 'struct RoleHolderData[]',
                name: 'roleHolders',
                type: 'tuple[]',
              },
              {
                components: [
                  { internalType: 'uint8', name: 'role', type: 'uint8' },
                  {
                    components: [
                      { internalType: 'address', name: 'target', type: 'address' },
                      { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
                      { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
                    ],
                    internalType: 'struct PermissionData',
                    name: 'permissionData',
                    type: 'tuple',
                  },
                  { internalType: 'bool', name: 'hasPermission', type: 'bool' },
                ],
                internalType: 'struct RolePermissionData[]',
                name: 'rolePermissions',
                type: 'tuple[]',
              },
              { internalType: 'string', name: 'color', type: 'string' },
              { internalType: 'string', name: 'logo', type: 'string' },
            ],
            internalType: 'struct LlamaPolicyConfig',
            name: 'policyConfig',
            type: 'tuple',
          },
        ],
        internalType: 'struct LlamaInstanceConfig',
        name: 'config',
        type: 'tuple',
      },
      { internalType: 'contract LlamaPolicy', name: 'policyLogic', type: 'address' },
      { internalType: 'contract ILlamaPolicyMetadata', name: 'policyMetadataLogic', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
    ],
    name: 'nonces',
    outputs: [{ internalType: 'uint256', name: 'currentNonce', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'policy',
    outputs: [{ internalType: 'contract LlamaPolicy', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint8', name: 'creatorRole', type: 'uint8' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'uint256', name: 'value', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct ActionInfo',
        name: 'actionInfo',
        type: 'tuple',
      },
    ],
    name: 'queueAction',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaAccount', name: 'accountLogic', type: 'address' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setAccountLogicAuthorization',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'target', type: 'address' },
      { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
      { internalType: 'contract ILlamaActionGuard', name: 'guard', type: 'address' },
    ],
    name: 'setGuard',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'script', type: 'address' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setScriptAuthorization',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setStrategyAuthorization',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaStrategy', name: 'strategyLogic', type: 'address' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setStrategyLogicAuthorization',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' }],
    name: 'strategies',
    outputs: [
      { internalType: 'bool', name: 'deployed', type: 'bool' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

export const llamaPolicyAbi = [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  { inputs: [], name: 'ActionCreationAtSameTimestamp', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'userAddress', type: 'address' }],
    name: 'AddressDoesNotHoldPolicy',
    type: 'error',
  },
  { inputs: [], name: 'AllHoldersRole', type: 'error' },
  { inputs: [], name: 'AlreadyInitialized', type: 'error' },
  { inputs: [], name: 'InvalidIndices', type: 'error' },
  { inputs: [], name: 'InvalidRoleHolderInput', type: 'error' },
  { inputs: [], name: 'NonTransferableToken', type: 'error' },
  { inputs: [], name: 'OnlyLlama', type: 'error' },
  { inputs: [], name: 'OnlyLlamaFactory', type: 'error' },
  { inputs: [{ internalType: 'uint8', name: 'role', type: 'uint8' }], name: 'RoleNotInitialized', type: 'error' },
  { inputs: [{ internalType: 'uint256', name: 'n', type: 'uint256' }], name: 'UnsafeCast', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'caller', type: 'address' },
      { indexed: true, internalType: 'address', name: 'policyholder', type: 'address' },
      { indexed: true, internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'ExpiredRoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'contract ILlamaPolicyMetadata', name: 'policyMetadata', type: 'address' },
      { indexed: true, internalType: 'contract ILlamaPolicyMetadata', name: 'policyMetadataLogic', type: 'address' },
      { indexed: false, internalType: 'bytes', name: 'initializationData', type: 'bytes' },
    ],
    name: 'PolicyMetadataSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'policyholder', type: 'address' },
      { indexed: true, internalType: 'uint8', name: 'role', type: 'uint8' },
      { indexed: false, internalType: 'uint64', name: 'expiration', type: 'uint64' },
      { indexed: false, internalType: 'uint96', name: 'quantity', type: 'uint96' },
    ],
    name: 'RoleAssigned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint8', name: 'role', type: 'uint8' },
      { indexed: false, internalType: 'RoleDescription', name: 'description', type: 'bytes32' },
    ],
    name: 'RoleInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint8', name: 'role', type: 'uint8' },
      { indexed: true, internalType: 'bytes32', name: 'permissionId', type: 'bytes32' },
      {
        components: [
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
        ],
        indexed: false,
        internalType: 'struct PermissionData',
        name: 'permissionData',
        type: 'tuple',
      },
      { indexed: false, internalType: 'bool', name: 'hasPermission', type: 'bool' },
    ],
    name: 'RolePermissionAssigned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'id', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'bytes32', name: 'permissionId', type: 'bytes32' },
    ],
    name: 'canCreateAction',
    outputs: [{ internalType: 'bool', name: 'hasPermission', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
    ],
    name: 'getPastQuantity',
    outputs: [{ internalType: 'uint96', name: '', type: 'uint96' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
    ],
    name: 'getPastRoleSupplyAsNumberOfHolders',
    outputs: [{ internalType: 'uint96', name: 'numberOfHolders', type: 'uint96' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
    ],
    name: 'getPastRoleSupplyAsQuantitySum',
    outputs: [{ internalType: 'uint96', name: 'totalQuantity', type: 'uint96' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'getQuantity',
    outputs: [{ internalType: 'uint96', name: '', type: 'uint96' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: 'role', type: 'uint8' }],
    name: 'getRoleSupplyAsNumberOfHolders',
    outputs: [{ internalType: 'uint96', name: 'numberOfHolders', type: 'uint96' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: 'role', type: 'uint8' }],
    name: 'getRoleSupplyAsQuantitySum',
    outputs: [{ internalType: 'uint96', name: 'totalQuantity', type: 'uint96' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'bytes32', name: 'permissionId', type: 'bytes32' },
    ],
    name: 'hasPermissionId',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: '_name', type: 'string' },
      {
        components: [
          { internalType: 'RoleDescription[]', name: 'roleDescriptions', type: 'bytes32[]' },
          {
            components: [
              { internalType: 'uint8', name: 'role', type: 'uint8' },
              { internalType: 'address', name: 'policyholder', type: 'address' },
              { internalType: 'uint96', name: 'quantity', type: 'uint96' },
              { internalType: 'uint64', name: 'expiration', type: 'uint64' },
            ],
            internalType: 'struct RoleHolderData[]',
            name: 'roleHolders',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'uint8', name: 'role', type: 'uint8' },
              {
                components: [
                  { internalType: 'address', name: 'target', type: 'address' },
                  { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
                  { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
                ],
                internalType: 'struct PermissionData',
                name: 'permissionData',
                type: 'tuple',
              },
              { internalType: 'bool', name: 'hasPermission', type: 'bool' },
            ],
            internalType: 'struct RolePermissionData[]',
            name: 'rolePermissions',
            type: 'tuple[]',
          },
          { internalType: 'string', name: 'color', type: 'string' },
          { internalType: 'string', name: 'logo', type: 'string' },
        ],
        internalType: 'struct LlamaPolicyConfig',
        name: 'config',
        type: 'tuple',
      },
      { internalType: 'contract ILlamaPolicyMetadata', name: 'policyMetadataLogic', type: 'address' },
      { internalType: 'address', name: 'executor', type: 'address' },
      {
        components: [
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
        ],
        internalType: 'struct PermissionData',
        name: 'bootstrapPermissionData',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'RoleDescription', name: 'description', type: 'bytes32' }],
    name: 'initializeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'isRoleExpired',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'llamaExecutor',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'llamaPolicyMetadata',
    outputs: [{ internalType: 'contract ILlamaPolicyMetadata', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numRoles',
    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'id', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'address', name: 'policyholder', type: 'address' },
    ],
    name: 'revokeExpiredRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'policyholder', type: 'address' }],
    name: 'revokePolicy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'uint256', name: 'start', type: 'uint256' },
      { internalType: 'uint256', name: 'end', type: 'uint256' },
    ],
    name: 'roleBalanceCheckpoints',
    outputs: [
      {
        components: [
          {
            components: [
              { internalType: 'uint64', name: 'timestamp', type: 'uint64' },
              { internalType: 'uint64', name: 'expiration', type: 'uint64' },
              { internalType: 'uint96', name: 'quantity', type: 'uint96' },
            ],
            internalType: 'struct PolicyholderCheckpoints.Checkpoint[]',
            name: '_checkpoints',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct PolicyholderCheckpoints.History',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'roleBalanceCheckpoints',
    outputs: [
      {
        components: [
          {
            components: [
              { internalType: 'uint64', name: 'timestamp', type: 'uint64' },
              { internalType: 'uint64', name: 'expiration', type: 'uint64' },
              { internalType: 'uint96', name: 'quantity', type: 'uint96' },
            ],
            internalType: 'struct PolicyholderCheckpoints.Checkpoint[]',
            name: '_checkpoints',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct PolicyholderCheckpoints.History',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'roleBalanceCheckpointsLength',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint8', name: 'role', type: 'uint8' },
    ],
    name: 'roleExpiration',
    outputs: [{ internalType: 'uint64', name: '', type: 'uint64' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'uint256', name: 'start', type: 'uint256' },
      { internalType: 'uint256', name: 'end', type: 'uint256' },
    ],
    name: 'roleSupplyCheckpoints',
    outputs: [
      {
        components: [
          {
            components: [
              { internalType: 'uint64', name: 'timestamp', type: 'uint64' },
              { internalType: 'uint96', name: 'numberOfHolders', type: 'uint96' },
              { internalType: 'uint96', name: 'totalQuantity', type: 'uint96' },
            ],
            internalType: 'struct SupplyCheckpoints.Checkpoint[]',
            name: '_checkpoints',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct SupplyCheckpoints.History',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: 'role', type: 'uint8' }],
    name: 'roleSupplyCheckpoints',
    outputs: [
      {
        components: [
          {
            components: [
              { internalType: 'uint64', name: 'timestamp', type: 'uint64' },
              { internalType: 'uint96', name: 'numberOfHolders', type: 'uint96' },
              { internalType: 'uint96', name: 'totalQuantity', type: 'uint96' },
            ],
            internalType: 'struct SupplyCheckpoints.Checkpoint[]',
            name: '_checkpoints',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct SupplyCheckpoints.History',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint8', name: 'role', type: 'uint8' }],
    name: 'roleSupplyCheckpointsLength',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaPolicyMetadata', name: 'llamaPolicyMetadataLogic', type: 'address' },
      { internalType: 'bytes', name: 'config', type: 'bytes' },
    ],
    name: 'setAndInitializePolicyMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'bool', name: '', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'address', name: 'policyholder', type: 'address' },
      { internalType: 'uint96', name: 'quantity', type: 'uint96' },
      { internalType: 'uint64', name: 'expiration', type: 'uint64' },
    ],
    name: 'setRoleHolder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      {
        components: [
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
        ],
        internalType: 'struct PermissionData',
        name: 'permissionData',
        type: 'tuple',
      },
      { internalType: 'bool', name: 'hasPermission', type: 'bool' },
    ],
    name: 'setRolePermission',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint8', name: 'role', type: 'uint8' },
      { internalType: 'RoleDescription', name: 'description', type: 'bytes32' },
    ],
    name: 'updateRoleDescription',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export const llamaAccountAbi = [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  { inputs: [], name: 'CannotDelegatecallWithValue', type: 'error' },
  { inputs: [{ internalType: 'bytes', name: 'result', type: 'bytes' }], name: 'FailedExecution', type: 'error' },
  { inputs: [], name: 'OnlyLlama', type: 'error' },
  { inputs: [], name: 'Slot0Changed', type: 'error' },
  { inputs: [], name: 'ZeroAddressNotAllowed', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint8', name: 'version', type: 'uint8' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC20', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC20Data',
        name: 'erc20Data',
        type: 'tuple',
      },
    ],
    name: 'approveERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC721', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC721Data',
        name: 'erc721Data',
        type: 'tuple',
      },
    ],
    name: 'approveERC721',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC1155', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'bool', name: 'approved', type: 'bool' },
        ],
        internalType: 'struct LlamaAccount.ERC1155OperatorData',
        name: 'erc1155OperatorData',
        type: 'tuple',
      },
    ],
    name: 'approveOperatorERC1155',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC721', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'bool', name: 'approved', type: 'bool' },
        ],
        internalType: 'struct LlamaAccount.ERC721OperatorData',
        name: 'erc721OperatorData',
        type: 'tuple',
      },
    ],
    name: 'approveOperatorERC721',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC20', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC20Data[]',
        name: 'erc20Data',
        type: 'tuple[]',
      },
    ],
    name: 'batchApproveERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC721', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC721Data[]',
        name: 'erc721Data',
        type: 'tuple[]',
      },
    ],
    name: 'batchApproveERC721',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC1155', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'bool', name: 'approved', type: 'bool' },
        ],
        internalType: 'struct LlamaAccount.ERC1155OperatorData[]',
        name: 'erc1155OperatorData',
        type: 'tuple[]',
      },
    ],
    name: 'batchApproveOperatorERC1155',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC721', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'bool', name: 'approved', type: 'bool' },
        ],
        internalType: 'struct LlamaAccount.ERC721OperatorData[]',
        name: 'erc721OperatorData',
        type: 'tuple[]',
      },
    ],
    name: 'batchApproveOperatorERC721',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC20', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC20Data[]',
        name: 'erc20Data',
        type: 'tuple[]',
      },
    ],
    name: 'batchTransferERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC721', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC721Data[]',
        name: 'erc721Data',
        type: 'tuple[]',
      },
    ],
    name: 'batchTransferERC721',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC1155', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256[]', name: 'tokenIds', type: 'uint256[]' },
          { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct LlamaAccount.ERC1155BatchData[]',
        name: 'erc1155BatchData',
        type: 'tuple[]',
      },
    ],
    name: 'batchTransferMultipleERC1155',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address payable', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.NativeTokenData[]',
        name: 'nativeTokenData',
        type: 'tuple[]',
      },
    ],
    name: 'batchTransferNativeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC1155', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256[]', name: 'tokenIds', type: 'uint256[]' },
          { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct LlamaAccount.ERC1155BatchData',
        name: 'erc1155BatchData',
        type: 'tuple',
      },
    ],
    name: 'batchTransferSingleERC1155',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'target', type: 'address' },
      { internalType: 'bool', name: 'withDelegatecall', type: 'bool' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
      { internalType: 'bytes', name: 'callData', type: 'bytes' },
    ],
    name: 'execute',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes', name: 'config', type: 'bytes' }],
    name: 'initialize',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'llamaExecutor',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256[]', name: '', type: 'uint256[]' },
      { internalType: 'uint256[]', name: '', type: 'uint256[]' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'onERC1155Received',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
      { internalType: 'bytes', name: '', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC1155', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct LlamaAccount.ERC1155Data',
        name: 'erc1155Data',
        type: 'tuple',
      },
    ],
    name: 'transferERC1155',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC20', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC20Data',
        name: 'erc20Data',
        type: 'tuple',
      },
    ],
    name: 'transferERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract IERC721', name: 'token', type: 'address' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.ERC721Data',
        name: 'erc721Data',
        type: 'tuple',
      },
    ],
    name: 'transferERC721',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address payable', name: 'recipient', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct LlamaAccount.NativeTokenData',
        name: 'nativeTokenData',
        type: 'tuple',
      },
    ],
    name: 'transferNativeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
]

export const llamaGovernanceScriptAbi = [
  {
    inputs: [
      { internalType: 'uint256', name: 'index', type: 'uint256' },
      { internalType: 'bytes', name: 'revertData', type: 'bytes' },
    ],
    name: 'CallReverted',
    type: 'error',
  },
  { inputs: [], name: 'MismatchedArrayLengths', type: 'error' },
  { inputs: [], name: 'OnlyDelegateCall', type: 'error' },
  { inputs: [{ internalType: 'uint8', name: 'role', type: 'uint8' }], name: 'RoleIsNotUpdatedRole', type: 'error' },
  { inputs: [], name: 'RoleQuantityMustBeGreaterThanZero', type: 'error' },
  { inputs: [{ internalType: 'address', name: 'target', type: 'address' }], name: 'UnauthorizedTarget', type: 'error' },
  {
    inputs: [
      { internalType: 'address[]', name: 'targets', type: 'address[]' },
      { internalType: 'bytes[]', name: 'data', type: 'bytes[]' },
    ],
    name: 'aggregate',
    outputs: [{ internalType: 'bytes[]', name: 'returnData', type: 'bytes[]' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract ILlamaAccount', name: 'accountLogic', type: 'address' },
          { internalType: 'bytes', name: 'config', type: 'bytes' },
        ],
        internalType: 'struct LlamaGovernanceScript.CreateAccount',
        name: 'account',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          {
            components: [
              { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
              { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
            ],
            internalType: 'struct LlamaGovernanceScript.SelectorStrategy',
            name: 'permissionData',
            type: 'tuple',
          },
        ],
        internalType: 'struct LlamaGovernanceScript.NewRolePermissionsData[]',
        name: 'newRolePermissionsData',
        type: 'tuple[]',
      },
    ],
    name: 'createAccountAndSetRolePermissions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'contract ILlamaStrategy', name: 'llamaStrategyLogic', type: 'address' },
          { internalType: 'bytes', name: 'config', type: 'bytes' },
        ],
        internalType: 'struct LlamaGovernanceScript.CreateStrategy',
        name: 'strategy',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          {
            components: [
              { internalType: 'address', name: 'target', type: 'address' },
              { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
            ],
            internalType: 'struct LlamaGovernanceScript.TargetSelector',
            name: 'permissionData',
            type: 'tuple',
          },
        ],
        internalType: 'struct LlamaGovernanceScript.NewStrategyRolesAndPermissionsData[]',
        name: 'newStrategyRolesAndPermissionsData',
        type: 'tuple[]',
      },
    ],
    name: 'createStrategyAndSetRolePermissions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'RoleDescription', name: 'description', type: 'bytes32' },
      {
        components: [
          { internalType: 'address', name: 'policyholder', type: 'address' },
          { internalType: 'uint96', name: 'quantity', type: 'uint96' },
          { internalType: 'uint64', name: 'expiration', type: 'uint64' },
        ],
        internalType: 'struct LlamaGovernanceScript.NewRoleHolderData[]',
        name: 'newRoleHolders',
        type: 'tuple[]',
      },
      {
        components: [
          { internalType: 'address', name: 'target', type: 'address' },
          { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
          { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
        ],
        internalType: 'struct PermissionData[]',
        name: 'newRolePermissionData',
        type: 'tuple[]',
      },
    ],
    name: 'initRoleAndHoldersAndPermissions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'RoleDescription[]', name: 'descriptions', type: 'bytes32[]' }],
    name: 'initRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: 'policies', type: 'address[]' }],
    name: 'revokePolicies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaAccount[]', name: 'accountLogics', type: 'address[]' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setAccountLogicAuthorizations',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'target', type: 'address' },
      { internalType: 'bytes4[]', name: 'selectors', type: 'bytes4[]' },
      { internalType: 'contract ILlamaActionGuard', name: 'guard', type: 'address' },
    ],
    name: 'setGuards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          { internalType: 'address', name: 'policyholder', type: 'address' },
          { internalType: 'uint96', name: 'quantity', type: 'uint96' },
          { internalType: 'uint64', name: 'expiration', type: 'uint64' },
        ],
        internalType: 'struct RoleHolderData[]',
        name: 'roleHolderData',
        type: 'tuple[]',
      },
    ],
    name: 'setRoleHolders',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          {
            components: [
              { internalType: 'address', name: 'target', type: 'address' },
              { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
              { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
            ],
            internalType: 'struct PermissionData',
            name: 'permissionData',
            type: 'tuple',
          },
          { internalType: 'bool', name: 'hasPermission', type: 'bool' },
        ],
        internalType: 'struct RolePermissionData[]',
        name: 'rolePermissionData',
        type: 'tuple[]',
      },
    ],
    name: 'setRolePermissions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'script', type: 'address' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          {
            components: [
              { internalType: 'bytes4', name: 'selector', type: 'bytes4' },
              { internalType: 'contract ILlamaStrategy', name: 'strategy', type: 'address' },
            ],
            internalType: 'struct LlamaGovernanceScript.SelectorStrategy',
            name: 'permissionData',
            type: 'tuple',
          },
        ],
        internalType: 'struct LlamaGovernanceScript.NewRolePermissionsData[]',
        name: 'newRolePermissionsData',
        type: 'tuple[]',
      },
    ],
    name: 'setScriptAuthAndSetPermissions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaStrategy[]', name: 'strategies', type: 'address[]' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setStrategyAuthorizations',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaStrategy', name: 'strategyLogic', type: 'address' },
      { internalType: 'bytes[]', name: 'strategies', type: 'bytes[]' },
    ],
    name: 'setStrategyLogicAuthAndNewStrategies',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'contract ILlamaStrategy[]', name: 'strategyLogics', type: 'address[]' },
      { internalType: 'bool', name: 'authorized', type: 'bool' },
    ],
    name: 'setStrategyLogicAuthorizations',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          { internalType: 'RoleDescription', name: 'description', type: 'bytes32' },
        ],
        internalType: 'struct LlamaGovernanceScript.UpdateRoleDescription',
        name: 'roleDescription',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          { internalType: 'address', name: 'policyholder', type: 'address' },
          { internalType: 'uint96', name: 'quantity', type: 'uint96' },
          { internalType: 'uint64', name: 'expiration', type: 'uint64' },
        ],
        internalType: 'struct RoleHolderData[]',
        name: 'roleHolderData',
        type: 'tuple[]',
      },
    ],
    name: 'updateRoleDescriptionAndRoleHolders',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint8', name: 'role', type: 'uint8' },
          { internalType: 'RoleDescription', name: 'description', type: 'bytes32' },
        ],
        internalType: 'struct LlamaGovernanceScript.UpdateRoleDescription[]',
        name: 'roleDescriptions',
        type: 'tuple[]',
      },
    ],
    name: 'updateRoleDescriptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]
